<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
		<property name="plugins">
			<array>
				<!-- 分页拦截器插件 -->
				<bean class="lc.cy.framework.interceptor.PageInterceptor">
					<property name="properties">
						<props>
							<prop key="pageNum">1</prop>
							<prop key="pageSize">10</prop>
							<prop key="startPage">1</prop>
							<prop key="endPage">10</prop>
							<prop key="pageRegular">.*ForPage$</prop>
							<prop key="dialect">MYSQL</prop>
						</props>
					</property>
				</bean>
				<!-- 结果集右空格去除拦截器插件 -->
				<bean id="resultSetInterceptor" class="lc.cy.framework.interceptor.ResultSetInterceptor">
					<property name="properties">
						<props>
							<prop key="openFlg">ON</prop>
						</props>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="lc.cy.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	
	<!-- 通过注解来控制事务提交 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	
</beans>
